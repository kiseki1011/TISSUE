name: CI Pipeline

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ dev ]

defaults:
  run:
    working-directory: backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Gradle 라이브러리 캐싱
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # PR comment에 JaCoCo 리포트 남기기
      - name: Comment for test coverage report
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: 📊 Test Coverage Report
          paths: ${{ github.workspace }}/backend/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ github.token }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70
          pass-emoji: ':white_check_mark:'

      # 빌드 결과에 대한 Slack 알림
      - name: Slack message with build result
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Checkstyle에 대한 리포트 확인 가능
      - name: Run Checkstyle
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          title: 🔍 Checkstyle Report
          path: 'backend/build/reports/checkstyle'
